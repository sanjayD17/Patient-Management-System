# -------------------- APP CONFIG --------------------
spring.application.name=PatientService
server.port=8088
grpc.server.port=9000

# -------------------- DATABASE --------------------
#spring.datasource.url=jdbc:postgresql://localhost:5432/patient_db

spring.datasource.url=jdbc:postgresql://patient-db:5432/patient_db
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# -------------------- gRPC CONFIG --------------------
# PatientService will call BillingService via gRPC
billing.service.address=billing-service
billing.service.grpc.port=9001

# -------------------- KAFKA CONFIG --------------------
# Kafka bootstrap server (matches docker-compose service name)
#spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}


# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
spring.kafka.producer.acks=all

## Consumer (optional, if PatientService consumes messages too)
#spring.kafka.consumer.group-id=patient-service-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.Deserializer

-------------------- LOGGING --------------------
logging.level.root=INFO
